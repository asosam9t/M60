{"version":3,"sources":["../../src/services/content.service.ts"],"sourcesContent":["import { HttpException } from '@exceptions/HttpException';\r\nimport { isEmpty } from '@utils/util';\r\nimport contentModel from '@/models/content.model';\r\nimport { Content } from '@/interfaces/content.interface';\r\nimport CloudinaryService from './cloudinary.service';\r\n\r\nclass ContentService {\r\n  public content = contentModel;\r\n  public cloudinary = new CloudinaryService();\r\n\r\n  public async createContent(contentData: Content): Promise<Content> {\r\n    if (isEmpty(contentData)) throw new HttpException(400, 'Content data is empty');\r\n\r\n    try {\r\n      const content: Content = await this.content.create({ ...contentData });\r\n      return content;\r\n    } catch (error) {\r\n      throw new HttpException(409, error?.message ?? 'Error creating content');\r\n    }\r\n  }\r\n\r\n  public async getAllContent(): Promise<Content[]> {\r\n    try {\r\n      const content: Content[] = await this.content.find().sort({ createdAt: -1 });\r\n      return content;\r\n    } catch (error) {\r\n      throw new HttpException(409, error?.message ?? 'Error fetching content');\r\n    }\r\n  }\r\n\r\n  public async deleteContent(id: string): Promise<Content> {\r\n    try {\r\n      //delete video and thumbnail from cloudinary\r\n      const contentM: Content = await this.content.findById(id);\r\n      await this.cloudinary.deleteVideo(contentM.video);\r\n      await this.cloudinary.deleteVideo(contentM.thumbnail);\r\n\r\n      const content: Content = await this.content.findByIdAndDelete(id);\r\n\r\n      return content;\r\n    } catch (error) {\r\n      throw new HttpException(409, error?.message ?? 'Error deleting content');\r\n    }\r\n  }\r\n}\r\n\r\nexport default ContentService;\r\n"],"names":["ContentService","createContent","contentData","isEmpty","HttpException","content","create","error","message","getAllContent","find","sort","createdAt","deleteContent","id","contentM","findById","cloudinary","deleteVideo","video","thumbnail","findByIdAndDelete","contentModel","CloudinaryService"],"mappings":"AAAA;;;;+BA8CA;;aAAA;;+BA9C8B;sBACN;qDACC;0DAEK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,IAAA,AAAMA,iBAAN,MAAMA;IAIJ,MAAaC,cAAcC,WAAoB,EAAoB;QACjE,IAAIC,IAAAA,aAAO,EAACD,cAAc,MAAM,IAAIE,4BAAa,CAAC,KAAK,yBAAyB;QAEhF,IAAI;YACF,MAAMC,UAAmB,MAAM,IAAI,CAACA,OAAO,CAACC,MAAM,CAAC,kBAAKJ;YACxD,OAAOG;QACT,EAAE,OAAOE,OAAO;gBACeA;YAA7B,MAAM,IAAIH,4BAAa,CAAC,KAAKG,CAAAA,MAAAA,kBAAAA,mBAAAA,KAAAA,IAAAA,MAAOC,OAAO,cAAdD,iBAAAA,MAAkB,wBAAwB,EAAE;QAC3E;IACF;IAEA,MAAaE,gBAAoC;QAC/C,IAAI;YACF,MAAMJ,UAAqB,MAAM,IAAI,CAACA,OAAO,CAACK,IAAI,GAAGC,IAAI,CAAC;gBAAEC,WAAW,CAAC;YAAE;YAC1E,OAAOP;QACT,EAAE,OAAOE,OAAO;gBACeA;YAA7B,MAAM,IAAIH,4BAAa,CAAC,KAAKG,CAAAA,MAAAA,kBAAAA,mBAAAA,KAAAA,IAAAA,MAAOC,OAAO,cAAdD,iBAAAA,MAAkB,wBAAwB,EAAE;QAC3E;IACF;IAEA,MAAaM,cAAcC,EAAU,EAAoB;QACvD,IAAI;YAEF,MAAMC,WAAoB,MAAM,IAAI,CAACV,OAAO,CAACW,QAAQ,CAACF;YACtD,MAAM,IAAI,CAACG,UAAU,CAACC,WAAW,CAACH,SAASI,KAAK;YAChD,MAAM,IAAI,CAACF,UAAU,CAACC,WAAW,CAACH,SAASK,SAAS;YAEpD,MAAMf,UAAmB,MAAM,IAAI,CAACA,OAAO,CAACgB,iBAAiB,CAACP;YAE9D,OAAOT;QACT,EAAE,OAAOE,OAAO;gBACeA;YAA7B,MAAM,IAAIH,4BAAa,CAAC,KAAKG,CAAAA,MAAAA,kBAAAA,mBAAAA,KAAAA,IAAAA,MAAOC,OAAO,cAAdD,iBAAAA,MAAkB,wBAAwB,EAAE;QAC3E;IACF;;aApCOF,UAAUiB,qBAAY;aACtBL,aAAa,IAAIM,0BAAiB;;AAoC3C;MAEA,WAAevB"}