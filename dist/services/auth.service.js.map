{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { SECRET_KEY } from '@/config';\r\nimport { CreateUserDto, LoginDto } from '@/dtos/users.dto';\r\nimport { HttpException } from '@/exceptions/HttpException';\r\nimport { DataStoredInToken, Otp, TokenData } from '@/interfaces/auth.interface';\r\nimport { User, userWithoutPassword } from '@/interfaces/users.interface';\r\nimport userModel from '@models/users.model';\r\nimport { compare, hash } from 'bcrypt';\r\nimport { isEmpty } from 'class-validator';\r\nimport { Request } from 'express';\r\nimport { sign } from 'jsonwebtoken';\r\n\r\nclass AuthService {\r\n  public users = userModel;\r\n\r\n  public createToken(user: User): TokenData {\r\n    const dataStoredInToken: DataStoredInToken = { _id: user._id };\r\n    const secretKey: string = SECRET_KEY;\r\n\r\n    return { token: sign(dataStoredInToken, secretKey) };\r\n  }\r\n\r\n  public signUp = async (req): Promise<{ user: userWithoutPassword }> => {\r\n    const userData: CreateUserDto = req.body;\r\n    userData.email = userData.email.toLowerCase();\r\n\r\n    let user = await this.users.findOne({ email: userData.email.toLowerCase() }).lean();\r\n\r\n    const hashedPassword = await hash(userData.password, 10);\r\n\r\n    if (user) {\r\n      throw new HttpException(409, `User with email ${userData.email} already exists`);\r\n    } else {\r\n      user = await this.users.create({ ...userData, password: hashedPassword });\r\n    }\r\n\r\n    return {\r\n      user: user,\r\n    };\r\n  };\r\n\r\n  public login = async (req: Request): Promise<{ user: userWithoutPassword; token: string }> => {\r\n    const userData: LoginDto = req.body;\r\n\r\n    const user = await this.users.findOne({ email: userData.email.toLowerCase() }).lean();\r\n\r\n    if (!user) throw new HttpException(409, 'User not found');\r\n\r\n    if (user.status === 'inactive' || user.status === 'pending') throw new HttpException(409, 'Account not active');\r\n\r\n    const isPasswordMatching: boolean = await compare(userData.password, user.password);\r\n    if (!isPasswordMatching) throw new HttpException(409, 'Invalid Credentials');\r\n\r\n    const { password, ...userWithoutPassword } = user;\r\n    const { token } = this.createToken(user);\r\n\r\n    return {\r\n      user: {\r\n        ...userWithoutPassword,\r\n      },\r\n      token,\r\n    };\r\n  };\r\n}\r\n\r\nexport default AuthService;\r\n"],"names":["AuthService","createToken","user","dataStoredInToken","_id","secretKey","SECRET_KEY","token","sign","users","userModel","signUp","req","userData","body","email","toLowerCase","findOne","lean","hashedPassword","hash","password","HttpException","create","login","status","isPasswordMatching","compare","userWithoutPassword"],"mappings":"AACA;;;;+BAgEA;;aAAA;;wBAhE2B;+BAEG;mDAGR;wBACQ;8BAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErB,IAAA,AAAMA,cAAN,MAAMA;IAGGC,YAAYC,IAAU,EAAa;QACxC,MAAMC,oBAAuC;YAAEC,KAAKF,KAAKE,GAAG;QAAC;QAC7D,MAAMC,YAAoBC,kBAAU;QAEpC,OAAO;YAAEC,OAAOC,IAAAA,kBAAI,EAACL,mBAAmBE;QAAW;IACrD;;aAPOI,QAAQC,mBAAS;aASjBC,SAAS,OAAOC,MAAgD;YACrE,MAAMC,WAA0BD,IAAIE,IAAI;YACxCD,SAASE,KAAK,GAAGF,SAASE,KAAK,CAACC,WAAW;YAE3C,IAAId,OAAO,MAAM,IAAI,CAACO,KAAK,CAACQ,OAAO,CAAC;gBAAEF,OAAOF,SAASE,KAAK,CAACC,WAAW;YAAG,GAAGE,IAAI;YAEjF,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACP,SAASQ,QAAQ,EAAE;YAErD,IAAInB,MAAM;gBACR,MAAM,IAAIoB,4BAAa,CAAC,KAAK,CAAC,gBAAgB,EAAET,SAASE,KAAK,CAAC,eAAe,CAAC,EAAE;YACnF,OAAO;gBACLb,OAAO,MAAM,IAAI,CAACO,KAAK,CAACc,MAAM,CAAC,qCAAKV;oBAAUQ,UAAUF;;YAC1D,CAAC;YAED,OAAO;gBACLjB,MAAMA;YACR;QACF;aAEOsB,QAAQ,OAAOZ,MAAwE;YAC5F,MAAMC,WAAqBD,IAAIE,IAAI;YAEnC,MAAMZ,OAAO,MAAM,IAAI,CAACO,KAAK,CAACQ,OAAO,CAAC;gBAAEF,OAAOF,SAASE,KAAK,CAACC,WAAW;YAAG,GAAGE,IAAI;YAEnF,IAAI,CAAChB,MAAM,MAAM,IAAIoB,4BAAa,CAAC,KAAK,kBAAkB;YAE1D,IAAIpB,KAAKuB,MAAM,KAAK,cAAcvB,KAAKuB,MAAM,KAAK,WAAW,MAAM,IAAIH,4BAAa,CAAC,KAAK,sBAAsB;YAEhH,MAAMI,qBAA8B,MAAMC,IAAAA,eAAO,EAACd,SAASQ,QAAQ,EAAEnB,KAAKmB,QAAQ;YAClF,IAAI,CAACK,oBAAoB,MAAM,IAAIJ,4BAAa,CAAC,KAAK,uBAAuB;YAE7E,MAAM,EAAED,SAAQ,EAA0B,GAAGnB,MAAxB0B,+CAAwB1B;gBAArCmB;;YACR,MAAM,EAAEd,MAAK,EAAE,GAAG,IAAI,CAACN,WAAW,CAACC;YAEnC,OAAO;gBACLA,MAAM,kBACD0B;gBAELrB;YACF;QACF;;AACF;MAEA,WAAeP"}