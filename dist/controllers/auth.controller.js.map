{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { HttpException } from '@/exceptions/HttpException';\r\nimport userModel from '@/models/users.model';\r\nimport MailService from '@/services/mail.service';\r\nimport AuthService from '@services/auth.service';\r\nimport { NextFunction, Request, Response } from 'express';\r\n\r\nclass AuthController {\r\n  public authService = new AuthService();\r\n  public mailService = new MailService();\r\n  public users = userModel;\r\n\r\n  public signUp = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const userData = await this.authService.signUp(req);\r\n\r\n      res.status(200).json({ status: 'success', ...userData, message: 'User Data Fetched' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public login = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const userData = await this.authService.login(req);\r\n\r\n      res.status(200).json({ status: 'success', ...userData, message: 'User Data Fetched' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public getUsers = async (req: any, res: Response, next: NextFunction) => {\r\n    try {\r\n      const admin = await this.users.findOne({ _id: req.user._id });\r\n\r\n      if (!admin) throw new HttpException(404, 'Unauthorized');\r\n\r\n      if (admin.email !== 'sales@faithudo.com') throw new HttpException(404, 'Unauthorized');\r\n      const users = await this.users.find().sort({ createdAt: -1 });\r\n\r\n      res.status(200).json({ status: 'success', users, message: 'User Data Fetched' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public getInactiveUsers = async (req: any, res: Response, next: NextFunction) => {\r\n    try {\r\n      const admin = await this.users.findOne({ _id: req.user._id });\r\n\r\n      if (!admin) throw new HttpException(404, 'Unauthorized');\r\n\r\n      if (admin.email !== 'sales@faithudo.com') throw new HttpException(404, 'Unauthorized');\r\n      const users = await this.users.find({ status: 'pending' }).sort({ createdAt: -1 });\r\n\r\n      res.status(200).json({ status: 'success', users, message: 'User Data Fetched' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public updateUser = async (req: any, res: Response, next: NextFunction) => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n      const admin = await this.users.findOne({ _id: req.user._id });\r\n\r\n      if (!admin) throw new HttpException(404, 'Unauthorized');\r\n\r\n      if (admin.email !== 'sales@faithudo.com') throw new HttpException(404, 'Unauthorized');\r\n      const usermain = await this.users.findOne({ _id: id });\r\n\r\n      if (!usermain) throw new Error('User not found');\r\n\r\n      const user = await this.users.findOneAndUpdate({ _id: id }, { status: usermain.status === 'active' ? 'inactive' : 'active' }, { new: true });\r\n\r\n      res.status(200).json({ status: 'success', user, message: 'User Data Fetched' });\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport default AuthController;\r\n"],"names":["AuthController","authService","AuthService","mailService","MailService","users","userModel","signUp","req","res","next","userData","status","json","message","error","login","getUsers","admin","findOne","_id","user","HttpException","email","find","sort","createdAt","getInactiveUsers","updateUser","id","params","usermain","Error","findOneAndUpdate","new"],"mappings":"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"}