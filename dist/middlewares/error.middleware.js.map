{"version":3,"sources":["../../src/middlewares/error.middleware.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\nimport { HttpException } from '@exceptions/HttpException';\r\nimport { logger } from '@utils/logger';\r\n\r\nconst errorMiddleware = (error: HttpException, req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const code: number = error.code || 500;\r\n    const status = 'failed';\r\n    const message: string = error.message || 'Something went wrong';\r\n    const errors: {} = error.errors || {};\r\n    logger.error(`[${req.method}] ${req.path} >> StatusCode:: ${code}, Message:: ${message}`);\r\n    res.status(code).json({ status, message, errors });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nexport default errorMiddleware;\r\n"],"names":["errorMiddleware","error","req","res","next","code","status","message","errors","logger","method","path","json"],"mappings":"AAAA;;;;+BAiBA;;aAAA;;wBAfuB;AAEvB,MAAMA,kBAAkB,CAACC,OAAsBC,KAAcC,KAAeC,OAAuB;IACjG,IAAI;QACF,MAAMC,OAAeJ,MAAMI,IAAI,IAAI;QACnC,MAAMC,SAAS;QACf,MAAMC,UAAkBN,MAAMM,OAAO,IAAI;QACzC,MAAMC,SAAaP,MAAMO,MAAM,IAAI,CAAC;QACpCC,cAAM,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEC,IAAIQ,MAAM,CAAC,EAAE,EAAER,IAAIS,IAAI,CAAC,iBAAiB,EAAEN,KAAK,YAAY,EAAEE,QAAQ,CAAC;QACxFJ,IAAIG,MAAM,CAACD,MAAMO,IAAI,CAAC;YAAEN;YAAQC;YAASC;QAAO;IAClD,EAAE,OAAOP,QAAO;QACdG,KAAKH;IACP;AACF;MAEA,WAAeD"}